package account_test

import (
	"bytes"
	"testing"

	"github.com/stretchr/testify/require"

	"github.com/bloxapp/eth2-key-manager/cli/cmd"
	"github.com/bloxapp/eth2-key-manager/cli/util/printer"
)

func TestAccountList(t *testing.T) {
	t.Run("Successfully list accounts", func(t *testing.T) {
		var output bytes.Buffer
		cmd.ResultPrinter = printer.New(&output)
		cmd.RootCmd.SetArgs([]string{
			"wallet",
			"account",
			"list",
			"--storage=7b226163636f756e7473223ac2268696768657374417474223a22376232323339333533303338333733313338333233393333333736363336333933383332363136353339333936363339363233303336363236343331333133363636333433363333363633343331333433353331333333303333333236353333333336313333363433313337333536343339333633363332363536343634363633313336333233313330333136363633363633363633363133323631333936363635363436313634363536343337333436323338333033343337363333353634363336363232336137623232373336633666373432323361333132633232363336663664366436393734373436353635356636393665363436353738323233613331326332323632363536313633366636653566363236633666363336623566373236663666373432323361323235313531336433643232326332323733366637353732363336353232336137623232363537303666363336383232336133313263323237323666366637343232336132323531353133643364323237643263323237343631373236373635373432323361376232323635373036663633363832323361333232633232373236663666373432323361323235313531336433643232376437643764222c226e6574776f726b223a223664363136393665366536353734222c2270726f706f73616c4d656d6f7279223ac2277616c6c6574223a223762323236393634323233613232363133353634333033373633363233333264363536323632363332643334363333313339326433383331363533383264333336343632333133373331333933323337363633313338323232633232363936653634363537383464363137303730363537323232336137623232333933353330333833373331333833323339333333373636333633393338333236313635333933393636333936323330333636323634333133313336363633343336333336363334333133343335333133333330333333323635333333333631333336343331333733353634333933363336333236353634363436363331333633323331333033313636363336363336363336313332363133393636363536343631363436353634333733343632333833303334333736333335363436333636323233613232333036363633333433313333363633363264333233353337363432643334363336353336326436313635363136353264363233333330333033393339333133353631363236363635323237643263323237343739373036353232336132323438343432323764222c2277616c6c657454797065223a224844227d",
		})
		err := cmd.RootCmd.Execute()
		actualOutput := output.String()
		require.NotNil(t, actualOutput)
		require.NoError(t, err)
	})

	t.Run("Fail to JSON un-marshal", func(t *testing.T) {
		var output bytes.Buffer
		cmd.ResultPrinter = printer.New(&output)
		cmd.RootCmd.SetArgs([]string{
			"wallet",
			"account",
			"list",
			"--storage=7b226163636f756e7473223a2237623764222c226174744d656d6f7279223a2237623764222c2270726f706f",
		})
		err := cmd.RootCmd.Execute()
		require.Error(t, err)
		require.EqualError(t, err, "failed to JSON un-marshal storage: unexpected end of JSON input")
	})
}
